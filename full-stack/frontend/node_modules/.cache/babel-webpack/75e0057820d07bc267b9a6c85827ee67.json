{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport User from '../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\n\nfunction LoginComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(apiService, _router, fb) {\n      this.apiService = apiService;\n      this._router = _router;\n      this.fb = fb;\n      this.user = new User();\n\n      this.checkError = (controlName, errorName) => {\n        return this.profileForm.controls[controlName].hasError(errorName);\n      };\n\n      this.profileForm = this.fb.group({\n        email: ['', Validators.compose([Validators.required])],\n        password: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {}\n\n    loginUser() {\n      console.log('Login details => ', this.profileForm.value);\n      this.apiService.putService('/api/login/loginform/' + this.profileForm.value.email + '/' + this.profileForm.value.password, this.profileForm.value).subscribe(data => {\n        console.log(\"response received\");\n\n        this._router.navigateByUrl('/loginsuccess');\n      }, error => {\n        console.log(\"exception occured\", error);\n      });\n    }\n\n    gotoregistration() {\n      this._router.navigate(['/registration']);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 50,\n    vars: 4,\n    consts: [[2, \"min-width\", \"100%\", \"min-height\", \"400%\", \"background-image\", \"url('../assets/img/pic3.jpg')\"], [1, \"container\", 2, \"max-width\", \"600px\", \"background-color\", \"rgb(135, 209, 157)\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"placeholder\", \"Enter email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"email\", \"\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"password\", \"\"], [1, \"checkbox\"], [\"type\", \"checkbox\", \"name\", \"remember\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"], [1, \"float-right\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"div\", 1);\n        i0.ɵɵelementStart(9, \"h2\");\n        i0.ɵɵtext(10, \"KANBAN BOARD LOGIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.loginUser();\n        });\n        i0.ɵɵelementStart(12, \"div\", 3);\n        i0.ɵɵelementStart(13, \"label\", 4);\n        i0.ɵɵtext(14, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 5, 6);\n        i0.ɵɵtemplate(17, LoginComponent_mat_error_17_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3);\n        i0.ɵɵelementStart(19, \"label\", 8);\n        i0.ɵɵtext(20, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 9, 10);\n        i0.ɵɵtemplate(23, LoginComponent_mat_error_23_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 11);\n        i0.ɵɵelementStart(25, \"label\");\n        i0.ɵɵelement(26, \"input\", 12);\n        i0.ɵɵtext(27, \" Remember me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 13);\n        i0.ɵɵtext(29, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"small\", 14);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_small_click_30_listener() {\n          return ctx.gotoregistration();\n        });\n        i0.ɵɵtext(31, \"New user? Register here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelement(39, \"br\");\n        i0.ɵɵelement(40, \"br\");\n        i0.ɵɵelement(41, \"br\");\n        i0.ɵɵelement(42, \"br\");\n        i0.ɵɵelement(43, \"br\");\n        i0.ɵɵelement(44, \"br\");\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵelement(46, \"br\");\n        i0.ɵɵelement(47, \"br\");\n        i0.ɵɵelement(48, \"br\");\n        i0.ɵɵelement(49, \"br\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkError(\"email\", \"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkError(\"password\", \"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.profileForm.valid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i4.NgIf, i5.MatError],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}